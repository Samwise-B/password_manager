services:
  db:
    container_name: postgres-db
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST_AUTH_METHOD=$POSTGRES_AUTH_METHOD
    # ports:
    #   - $POSTGRES_PORT:$POSTGRES_PORT
    networks:
      - passmanager
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/data:/var/lib/postgresql/data
    restart: always
    command: -p $POSTGRES_PORT

  passmanager-api:
    container_name: passmanager-api
    depends_on:
      - db
    build: 
      context: ./server
    # ports:
    #   - $API_PORT:$API_PORT
    networks:
      - passmanager
    volumes:
      - ./server:/app
      - /app/node_modules
    labels:
      - "traefik.enable=true"

  passmanager-frontend:
    container_name: passmanager-frontend
    build: 
      context: ./client
    volumes:
      - ./client:/app
      - node_modules:/app/node_modules
    # ports:
    #   - $VITE_PORT:$VITE_PORT
    networks:
      - passmanager
    labels:
      - "traefik.enable=true"
    stdin_open: true

  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"  # Exposes the Traefik dashboard (optional)
      - "--providers.docker=true"  # Docker provider to automatically detect services
      #- "--configFile=/etc/traefik/traefik.yml"
      - "--providers.file.directory=/etc/traefik/rules"
      - "--entryPoints.web.address=:80"  # HTTP entry point
      - "--entryPoints.websecure.address=:443"  # HTTPS entry point
      - "--api.dashboard=true"
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
      - "8080:8080"
    networks:
      - passmanager
    volumes:
      - ./certs:/certs  # Mount the folder with your certificates
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - ./traefik-rules.yml:/etc/traefik/rules/traefik-rules.yml
      - "/var/run/docker.sock:/var/run/docker.sock" 
    labels:
      - "traefik.enable=true"

volumes:
  node_modules: {}

networks:
  passmanager:
    driver: bridge