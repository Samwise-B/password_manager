services:
  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    networks:
      - api-network
    volumes:
      - ./db/data:/var/lib/postgresql/data
    restart: always
    command: -p $POSTGRES_PORT

  api:
    depends_on:
      - db
    build: 
      context: ./server
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=$API_NODE_ENV
      - PORT=$API_PORT
      - PGHOST=db
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - API_GET_LIST_ENDPOINT=$API_GET_LIST_ENDPOINT
      - API_ADD_PASS_ENDPOINT=$API_ADD_PASS_ENDPOINT
      - API_UPDATE_PASS_ENDPOINT=$API_UPDATE_PASS_ENDPOINT
      - API_DELETE_PASS_ENDPOINT=$API_DELETE_PASS_ENDPOINT
      - API_LOGIN_CHALLENGE_ENDPOINT=$API_LOGIN_CHALLENGE_ENDPOINT
      - API_LOGIN_VERIFY_ENDPOINT=$API_LOGIN_VERIFY_ENDPOINT
      - API_REGISTER_ENDPOINT=$API_REGISTER_ENDPOINT
      - API_LOGOUT_ENDPOINT=$API_LOGOUT_ENDPOINT
      - JWT_SECRET=$JWT_SECRET
    ports:
      - $API_PORT:$API_PORT
    networks:
      - api-network
    volumes:
      - /app/node_modules

  app_build:
    build: 
      context: ./client
      dockerfile: Dockerfile.prod
    environment:
      - VITE_ENV=$VITE_ENV
      - VITE_PORT=$VITE_PORT
      - VITE_API_HOST=$VITE_API_HOST
      - VITE_API_PORT=$VITE_API_PORT
      - VITE_API_GET_LIST=$VITE_API_GET_LIST
      - VITE_API_ADD_PASS=$VITE_API_ADD_PASS
      - VITE_API_UPDATE_PASS=$VITE_API_UPDATE_PASS
      - VITE_API_DELETE_PASS=$VITE_API_DELETE_PASS
      - VITE_API_LOGIN_CHALLENGE=$VITE_API_LOGIN_CHALLENGE
      - VITE_API_LOGIN_VERIFY=$VITE_API_LOGIN_VERIFY
      - VITE_API_REGISTER=$VITE_API_REGISTER
      - VITE_API_LOGOUT=$VITE_API_LOGOUT
    volumes:
      - ./client/build:/app/build
  client_server:
    image: nginx:1.27.2-alpine
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
    volumes:
      - ./client/build:/usr/share/nginx/html
      - ./certs:/etc/letsencrypt  # Mount certs for SSL
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Custom Nginx config
    networks:
      - api-network

  # certbot:
  #   image: certbot/certbot
  #   depends_on:
  #     - client_server
  #   volumes:
  #     - ./certs:/etc/letsencrypt  # Shared certs
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Shared Nginx config
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  api-network:
    driver: bridge